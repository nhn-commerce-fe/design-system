{"version":3,"file":"components-carouselArrow-CarouselArrow-stories.a41fad33d70c0095caa6.hot-update.js","mappings":";;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1DA;AACA;AAEA;AAAA;AASA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAMA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;AAGA;AAAA;AAxBA;AAAA;AAAA","sources":["webpack://ui/../../node_modules/classnames/index.js","webpack://ui/./src/components/carouselArrow/CarouselArrow.tsx"],"sourcesContent":["/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\tvar nativeCodeString = '[native code]';\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","import { Size } from '../../../constant/size';\nimport classnames from 'classnames';\nimport { SvgIcon } from '../svg/SvgIcon';\nimport { IconName } from '../svg/const';\nimport { forwardRef, type ComponentProps } from 'react';\n\ninterface CarouselArrowProps extends Omit<ComponentProps<'button'>, 'type' | 'ref'> {\n  size?: Omit<Size, 'sm' | 'xl' | '2xl'>;\n  arrow?: 'left' | 'right';\n  type?: 'b-chevron' | 'b-arrow';\n  disabled?: boolean;\n}\n\nconst ARROW_TYPE: { [key: string]: IconName } = {\n  'b-chevron': 'chevronRight',\n  'b-arrow': 'arrowRight',\n};\n\nexport const CarouselArrow = forwardRef<HTMLButtonElement, CarouselArrowProps>(\n  ({ size = 'md', arrow = 'right', type = 'b-arrow', disabled = false, ...props }, ref) => {\n    const a11yText = 'left' ? '이전' : '다음';\n    const carouselSize = size === 'md' ? 20 : 24;\n    return (\n      <button\n        ref={ref as never}\n        type=\"button\"\n        className={classnames(\n          'carousel-arrow',\n          `carousel-arrow--${arrow}`,\n          `carousel-arrow--${type}`,\n          `carousel-arrow--${size}`\n        )}\n        disabled={disabled}\n        {...props}\n      >\n        <SvgIcon icon={ARROW_TYPE[type]} size={carouselSize} color=\"gray400\" />\n        <span className=\"a11y\">{a11yText} 버튼</span>\n      </button>\n    );\n  }\n);\n\n// export const CarouselArrow =\n"],"names":[],"sourceRoot":""}