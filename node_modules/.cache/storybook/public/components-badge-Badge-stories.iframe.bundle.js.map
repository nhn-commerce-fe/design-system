{"version":3,"file":"components-badge-Badge-stories.iframe.bundle.js","mappings":";;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3DA;AAGA;;AAEA;AAAA;AAcA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AASA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AA7BA;AAAA","sources":["webpack://ui/../../node_modules/classnames/index.js","webpack://ui/./src/components/badge/Badge.tsx"],"sourcesContent":["/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\tvar nativeCodeString = '[native code]';\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","import classnames from 'classnames';\nimport { COLOR } from '../../../constant/color';\nimport { Size } from '../../../constant/size';\nimport { SvgIcon } from '../svg/SvgIcon';\n\n// TODO: modern type 추가 하기\n\ntype BadgeColor = 'gray' | 'error' | 'warning' | 'success' | 'pink' | 'info' | 'yellow' | 'violet';\n\nexport interface BadgeProps {\n  className?: string;\n  color?: BadgeColor;\n  label: string;\n  type?: 'pill' | 'badge';\n  onlyOutline?: boolean;\n  size?: Omit<Size, 'xl' | '2xl'>;\n  icon?: 'dot' | 'x' | 'arrowRight' | false;\n}\n\nexport const BADGE_COLOR: { [key: string]: 'blue' | 'green' | 'orange' | 'red' } = {\n  info: 'blue',\n  success: 'green',\n  warning: 'orange',\n  error: 'red',\n};\n\nexport const Badge = ({\n  icon,\n  size = 'md',\n  type = 'pill',\n  onlyOutline = false,\n  className,\n  color = 'violet',\n  label,\n}: BadgeProps) => {\n  const svgColor = `${BADGE_COLOR[color] || color}600` as keyof typeof COLOR;\n\n  return (\n    <span\n      className={classnames(\n        'badge',\n        `badge--${color}`,\n        `badge--${size}`,\n        `badge--${type}`,\n        onlyOutline ? `badge--outline` : '',\n        icon === 'dot' ? 'badge--dot' : '',\n        label,\n        className\n      )}\n    >\n      <span className=\"badge__label\">{label}</span>\n      {icon === 'x' && <SvgIcon icon=\"xClose\" size={16} color={svgColor} />}\n      {icon === 'arrowRight' && <SvgIcon icon=\"arrowRight\" size={16} color={svgColor} />}\n    </span>\n  );\n};\n"],"names":[],"sourceRoot":""}