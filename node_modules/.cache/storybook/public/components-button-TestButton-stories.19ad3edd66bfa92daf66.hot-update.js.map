{"version":3,"file":"components-button-TestButton-stories.19ad3edd66bfa92daf66.hot-update.js","mappings":";;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3DA;AACA;AAAA;AAAA;AAiBA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAcA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AAOA;AAEA;AAAA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAzCA;AAAA;AAAA;AAAA;AAAA","sources":["webpack://ui/../../node_modules/classnames/index.js","webpack://ui/./src/components/button/Button.tsx"],"sourcesContent":["/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\tvar nativeCodeString = '[native code]';\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","import { type ComponentProps, createElement, forwardRef } from 'react';\nimport classnames from 'classnames';\n\nexport type ButtonTheme =\n  | 'primary'\n  | 'tertiary-gray'\n  | 'secondary-color'\n  | 'secondary-gray'\n  | 'tertiary-color'\n  | 'link-gray'\n  | 'link-color';\nexport type ButtonSize = 'sm' | 'md' | 'lg' | 'xl' | '2xl';\n\ninterface ButtonBaseProps extends Omit<ComponentProps<'button'>, 'ref'> {\n  href?: string;\n  target?: '_self' | '_blank';\n}\n\nconst ComponentBase = forwardRef<HTMLButtonElement | HTMLAnchorElement, ButtonBaseProps>(\n  ({ href, children, ...props }, ref) => {\n    const BaseComponent = href ? 'a' : 'button';\n    return createElement(BaseComponent, { href, ref, ...props }, children);\n  }\n);\n\nexport interface ButtonProps extends ButtonBaseProps {\n  label: string;\n  className?: string;\n  fullSized?: boolean;\n  hierarchy?: ButtonTheme;\n  disabled?: boolean;\n  leadingIcon?: JSX.Element | JSX.Element[];\n  trailingIcon?: JSX.Element | JSX.Element[];\n  onlyIcon?: boolean;\n  size?: ButtonSize;\n}\n\nexport const Button = forwardRef<HTMLButtonElement | HTMLAnchorElement, ButtonProps>(\n  (\n    {\n      leadingIcon,\n      trailingIcon,\n      onlyIcon = false,\n      href,\n      label,\n      hierarchy,\n      disabled,\n      className = '',\n      fullSized,\n      size = 'lg',\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    return (\n      <ComponentBase\n        href={href}\n        className={classnames(\n          'btn',\n          `btn--${size}`,\n          hierarchy && `btn--${hierarchy}`,\n          fullSized && 'is-full',\n          disabled && 'is-disable',\n          className\n        )}\n        {...props}\n        ref={ref}\n      >\n        <>\n          {leadingIcon && leadingIcon}\n          {onlyIcon ? <span className=\"a11y\">{label}</span> : <span className=\"btn__label\">{label}</span>}\n          {trailingIcon && trailingIcon}\n          {children && children}\n        </>\n      </ComponentBase>\n    );\n  }\n);\n"],"names":[],"sourceRoot":""}